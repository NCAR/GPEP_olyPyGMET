# configuration file used to run GMET ensemble estimation
# settings in this configuration file is used to reproduce Fortan GMET test case outputs
# there could be some small differences between Pyhon and Fortran version

########################################################################################################################
# general settings
########################################################################################################################

# case name. will be used in ensemble outputs generations
case_name = 'Sklearntest'

# worker number (cpu cores) for parallelization. Better to be <= ensemble number
num_processes = 5

# master seed: control all probabilistic process (e.g., probabilistic estimation, machine learning methods)
# a negative value means random generation without reproducibility
master_seed = 20230104

########################################################################################################################
# settings for gridded estimation using regression or machine learning methods
########################################################################################################################

############################## input/output files
# station input data (Fortran GMET input format station)
input_stn_list = "../test_cases/cali2017/inputs/CALI.screened_stn_list_slope.v3.csv"
input_stn_path = "../test_cases/cali2017/stndata"

# domain gridded attributes (e.g., dem, lon, lat, slope)
infile_grid_domain = "../test_cases/cali2017/inputs/CALI.gridinfo.0625_v3.nc"

# parent output path
outpath_parent = "../test_cases/cali2017/PyGMET_output"

# file list containing dynamic predictor inputs
# this is optional. give it a nonsense string (e.g., "NA") can turn off dynamic predictors
# dynamic_predictor_filelist = "../test_cases/cali2017/griddata_standard/grid_file_list.txt"
dynamic_predictor_filelist = "NA"

############################## target variables and periods
# target period
date_start = "2017-02-01"
date_end = "2017-02-15"

# input/output variables (currently, only prcp, tmean, trange)
input_vars = ['prcp', 'tmin', 'tmax'] # variables in the raw station files

#!!!!!!!!!!!!!!! Add this to the script. Input variables may need some operations to get out target variables. Using Python syntax.
mapping_input_output = ['prcp=prcp', 'tmean=(tmin+tmax)/2', 'trange=tmax-tmin']

target_vars = ['prcp', 'tmean', 'trange'] # target output variables. tmean and trange are supported. meanwhile, any var from input_vars (e.g., tmin tmax) is accepted
minRange_vars = [0, -100, 1] # >=. Daily limits slightly beyond global records from google search. 1 for Trange is arbitrary. this is not used in probabilistic estimation
maxRange_vars = [2000, 60, 60] # <=. Daily limits slightly beyond global records from google search. this is not used in probabilistic estimation
transform_vars = ['boxcox', '', ''] # There is a section at the end of the config file defining various transformation
#target_vars = ['prcp', 'tmean', 'trange', 'tmin', 'tmax'] # target output variables. tmean and trange are supported. meanwhile, any var from input_vars is accepted
#minRange_vars = [0, -100, 1, -100, -100] # >=. Daily limits slightly beyond global records from google search. 1 for Trange is arbitrary.
#maxRange_vars = [2000, 60, 60, 60, 60] # <=. Daily limits slightly beyond global records from google search.
#transform_vars = ['boxcoxnono', 'anything cannot be found in [transform] section will activate non transformation', '', '', ''] # There is a section at the end of the config file defining various transformation

############################## static predictors for regression
# predictors used in regression. Station and grid variable names should be unified in the future.
predictor_name_static_stn = ['lat', 'lon', 'elev', 'slp_n', 'slp_e'] # variable names in station attribute file
predictor_name_static_grid = ['latitude', 'longitude', 'elev', 'gradient_n_s', 'gradient_w_e'] # variable names in station attribute file

############################## dynamic predictors for regression
# if don't want to use dynamic factors, just give invalid dynamic_predictor_name or dynamic_predictor_filelist
# dynamic_predictor_name = [] # don't use dynamic predictors
dynamic_predictor_name = [['cube_root_prec_rate', 'tmp_2m'],
                          ['cube_root_prec_rate', 'tmp_2m'],
                          ['cube_root_prec_rate', 'tmp_2m'],
                          ]
# dynamic_predictor_check can be deleted now
dynamic_predictor_check = ['cube_root_prec_rate'] # check whether they are good in regression. For example, precipitation may have many zero values.

# dynamic predictors needs some processing, such as
# interpolation from dynamic grids to target grids and station points
#     Keyword "interp" accepts {"linear", "nearest", "zero", "slinear", "quadratic", "cubic", "polynomial"} enabled by xarray.interp.
# transformation of the raw dynamic predictor
#     Keyword "transform" accepts methods defined in the transformation section
# Example "cube_root_prec_rate:interp=linear:transform=boxcox"
dynamic_predictor_operation = ['cube_root_prec_rate:interp=nearest',
                               'tmp_2m:interp=nearest']

########################################################################################################################
# settings for probabilistic estimation
# can be put in another config file
########################################################################################################################

# run ensemble or not: true or false
ensemble_flag = true

# ensemble settings
# note: ensemble_start starts from 1, not 0
# note: if don't want to generate ensemble estimates, just set ensemble_start or ensemble_end to negative values
ensemble_start = 1
ensemble_end = 5

# link variables
linkvar = [ ['prcp', 'trange'], ]  # random number generation dependence, e.g., ['prcp', 'trange'] means prcp depends on trange

# variable space and temporal correlation length. the list corresponds to target_vars. negative values mean calculation based available station data
# if integer instead of list is used, this value will be applied to all variables
clen = [150, 800, 800]
#clen = [-999, -999, -999]


########################################################################################################################
# default settings
# they are as useful as the above settings but using their default values does not affect model run for any case
########################################################################################################################

# gridding methods
# Valid values: LWLR, RandomForestRegressor, RandomForestClassifier
# Machine learning methods are supported by sklearn. Parametrs of methods supported by sklearn can be defined at the bottom of this configuration file (optional)
# Examples: ensemble.RandomForestRegressor, ensemble.RandomForestClassifier, neural_network.MLPRegressor, neural_network.MLPClassifier, ensemble.GradientBoostingClassifier, ensemble.GradientBoostingRegressor
gridcore_continuous = 'LWLR'
gridcore_classification = 'LWLR' # for probability of precipitation
n_splits = 10 # only useful for machine learning methods. cross validation to generate uncertainty estimates.

# Number of stations to consider for each target point. nearstn_min<=nearstn_max.
nearstn_min = 35  # nearby stations: minimum number
nearstn_max = 35  # nearby stations: maximum number

# first try this radius (km). if not enough, expand. Could be useful to reduce computation time for large domain search.
try_radius = 10000

# Initial Search Distance in km (expanded if need be)
initial_distance = 100

# direct: using raw time series to calculate autocorrelation; anomaly: using the anomaly of time series to calculate autocorrelation
auto_corr_method = 'direct'
# only effective for auto_corr_method=anomaly. rolling mean window size, which is used for variable lag auto correlation calculation
rolling_window = 31 # 31-monthly rolling mean to remove monthly cycle

# overwrite existing files: make it optional and set the default as false
overwrite_stninfo = false
overwrite_station_cc = false
overwrite_weight = false
overwrite_loo_reg = false
overwrite_grid_reg = false
overwrite_ens = false
overwrite_spcorr = false


########################################################################################################################
# method-related settings
# default values can be directly used
########################################################################################################################

[transform]
# note: the name must be consistent with transform_vars
[transform.boxcox]
exp = 4

[machine_learning]
# if no parameters are provided or if the section does not even exist, default parameters will be used.
# just provide the method name, no need to include the submodule name
[machine_learning.RandomForestRegressor]
n_estimators = 500 # a example of RandomForestRegressor parameter
n_jobs = 5
[machine_learning.RandomForestClassifier]
n_estimators = 500 # a example of RandomForestRegressor parameter
n_jobs = 5