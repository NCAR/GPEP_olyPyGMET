# configuration file used to run GMET ensemble estimation

author = "Guoqiang Tang"
version = "0.0.1"
name = "PyGMET for SHARP"
date = "2022-12"
affiliation = "NCAR CGD"

# station input data (Fortran GMET input format station)
input_stn_list = "../test_cases/cali2017/inputs/CALI.screened_stn_list_slope.v3.csv"
input_stn_path = "../test_cases/cali2017/stndata"

# domain gridded attributes (e.g., dem, lon, lat, slope)
infile_grid_domain = "../test_cases/cali2017/inputs/CALI.gridinfo.0625_v3.nc"

# parent output path
outpath_parent = "../test_cases/cali2017/PyGMET_output"

# target period
date_start = "2017-02-01"
date_end = "2017-02-15"

# input/output variables (currently, only prcp, tmean, trange)
input_vars = ['prcp', 'tmin', 'tmax'] # variables in the raw station files
target_vars = ['prcp', 'tmean', 'trange'] # target output variables. tmean and trange are supported. meanwhile, any var from input_vars (e.g., tmin tmax) is accepted
minRange_vars = [0, -100, 1] # >=. Daily limits slightly beyond global records from google search. 1 for Trange is arbitrary. this is not used in probabilistic estimation
maxRange_vars = [2000, 60, 60] # <=. Daily limits slightly beyond global records from google search. this is not used in probabilistic estimation
transform_vars = ['boxcox', '', ''] # There is a section at the end of the config file defining various transformation
#target_vars = ['prcp', 'tmean', 'trange', 'tmin', 'tmax'] # target output variables. tmean and trange are supported. meanwhile, any var from input_vars is accepted
#minRange_vars = [0, -100, 1, -100, -100] # >=. Daily limits slightly beyond global records from google search. 1 for Trange is arbitrary.
#maxRange_vars = [2000, 60, 60, 60, 60] # <=. Daily limits slightly beyond global records from google search.
#transform_vars = ['boxcoxnono', 'anything cannot be found in [transform] section will activate non transformation', '', '', ''] # There is a section at the end of the config file defining various transformation

# Number of stations to consider for each target point. nearstn_min<=nearstn_max.
nearstn_min = 35  # nearby stations: minimum number
nearstn_max = 35  # nearby stations: maximum number

# first try this radius (km). if not enough, expand. Could be useful to reduce computation time for large domain search.
try_radius = 10000

# Initial Search Distance in km (expanded if need be)
initial_distance = 100

# predictors used in regression. Station and grid variable names should be unified in the future.
predictor_name_static_stn = ['lat', 'lon', 'elev', 'slp_n', 'slp_e'] # variable names in station attribute file
predictor_name_static_grid = ['latitude', 'longitude', 'elev', 'gradient_n_s', 'gradient_w_e'] # variable names in station attribute file

# ensemble settings
ensemble_number = 5

# master probabilistic seed: control all probabilistic process (e.g., generating other random seeds)
master_seed = 20230104

# variable space and temporal correlation length. the list corresponds to target_vars. negative values mean calculation based available station data
clen = [150, 800, 300]
#clen = [-999, -999, -999]

# overwrite existing files
overwrite_stninfo = false
overwrite_station_cc = false
overwrite_weight = false
overwrite_loo_reg = false
overwrite_grid_reg = false
overwrite_ens = false
overwrite_spcorr = false


[transform]
# note: the name must be consistent with transform_vars
[transform.boxcox]
exp = 4
[transform.ToBeAdded]
example_param_a = 5
example_param_b = -2
